import org.gradle.internal.os.OperatingSystem;

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'application'
}

application {
    applicationDefaultJvmArgs = []

    if (OperatingSystem.current().isMacOsX()) {
        applicationDefaultJvmArgs = ["-XstartOnFirstThread"]
    }
}

ext {
    osgi_platform = System.getenv('OSGI_PLATFORM')
    swt_version = '3.114.0'

    if (osgi_platform == null) {
        if (OperatingSystem.current().isMacOsX()) {
            osgi_platform = 'cocoa.macosx.x86_64'
        } else if (OperatingSystem.current().isWindows()) {
            osgi_platform = 'win32.win32.x86_64'
        } else {
//            osgi_platform = 'gtk.linux.ppc64le'
            osgi_platform = 'gtk.linux.x86_64'
        }
    }
}

configurations.all {
    resolutionStrategy {
        dependencySubstitution {
            // The maven property ${osgi.platform} is not handled by Gradle
            // so we replace the dependency, using the osgi platform from the project settings
            substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') with module("org.eclipse.platform:org.eclipse.swt.$osgi_platform:$swt_version")
        }
    }
}

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'io.javalin:javalin:3.10.1'
    implementation 'org.slf4j:slf4j-simple:1.8.0-beta4'
    implementation 'com.github.guepardoapps:kulid:1.1.2.0'
    implementation 'org.sql2o:sql2o:1.6.0'
    implementation 'org.xerial:sqlite-jdbc:3.32.3.2'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation 'com.github.salomonbrys.kotson:kotson:2.5.0'
    implementation 'org.apache.httpcomponents:httpclient:4.5.12'
    implementation 'org.jsoup:jsoup:1.13.1'
    compile group: 'org.eclipse.platform', name: "org.eclipse.swt.$osgi_platform", version: swt_version

    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

application {
    mainClassName = 'makehtml.AppKt'
}

shadowJar {
    archiveClassifier = osgi_platform
    archiveVersion = ''
    destinationDir = file('.')
}
